{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"QB64PE Global Header": {
		"scope": "QB64",
		"prefix": "qb",
		"body": [
			"\\$NOPREFIX",
			"'\\$DYNAMIC",
			"OPTION _EXPLICIT",
			"OPTION _EXPLICITARRAY",
			"\\$IF DEBUGGING = UNDEFINED THEN",
			"	\\$LET DEBUGGING = TRUE",
			"\\$END IF",
			"\\$IF DEBUGGING = TRUE THEN",
			"	\\$DEBUG",
			"	\\$CONSOLE",
			"	\\$ASSERTS:CONSOLE",
			"	_CONSOLE ON",
			"\\$END IF",
			"\\$IF FALSE = UNDEFINED AND TRUE = UNDEFINED THEN",
			"	\\$LET TRUE = TRUE",
			"	CONST FALSE = 0 : CONST TRUE = NOT FALSE"
			"\\$END IF",
			"\\$IF WIN THEN",
			"    CONST SLASH\\$ = \"\\\"",
			"\\$ELSE",
			"    CONST SLASH\\$ = \"/\"",
			"\\$END IF",
			"",
			"",
			"",
			"$1",
			"",
			"",
			"",
			"''",
			"' Log to console if DEBUGGING",
			"' @param STRING msg message to send",
			"'",
			"SUB console.log(msg$)"
			"	\\$IF DEBUGGING = TRUE THEN",
			"		_ECHO msg$",
			"	\\$END IF",
			"	msg\\$ = \"\"",
			"END SUB"
			"",
			"",
			"''",
			"' Log to console as info if DEBUGGING",
			"' @param STRING msg message to send",
			"'",
			"SUB console.info(msg\\$)"
			"	\\$IF DEBUGGING = TRUE THEN",
			"		DIM AS STRING e"
			"		e\\$ = CHR\\$(27)"
			"		_ECHO e\\$ + \"[1;36m\" + msg$ + e\\$ + \"[0m\"",
			"	\\$END IF",
			"	msg\\$ = \"\"",
			"END SUB",
			"",
			"",
			"''",
			"' Log to console as warning if DEBUGGING",
			"' @param STRING msg message to send",
			"'",
			"SUB console.warn(msg\\$)"
			"	\\$IF DEBUGGING = TRUE THEN",
			"		DIM AS STRING e"
			"		e\\$ = CHR\\$(27)"
			"		_ECHO e\\$ + \"[1;33m\" + msg$ + e\\$ + \"[0m\"",
			"	\\$END IF",
			"	msg\\$ = \"\"",
			"END SUB",
			"",
			"",
			"''",
			"' Log to console as error if DEBUGGING",
			"' @param STRING msg message to send",
			"'",
			"SUB console.error(msg\\$)"
			"	\\$IF DEBUGGING = TRUE THEN",
			"		DIM AS STRING e"
			"		e\\$ = CHR\\$(27)"
			"		_ECHO e\\$ + \"[1;31m\" + msg$ + e\\$ + \"[0m\"",
			"	\\$END IF",
			"	msg\\$ = \"\"",
			"END SUB",
		],
		"description": "Create global QB64PE header"
	},
	"QB64PE Draw Screen and Input Loop": {
		"scope": "QB64",
		"prefix": "qbs",
		"body": [
			"'Setup screen and input loop",
			"DIM SHARED AS STRING k"
			"DIM SHARED AS LONG CANVAS",
			"CANVAS = _NEWIMAGE(720, 480, 32)",
			"SCREEN CANVAS",
			"do_output",
			"$1",
			"DO",
			"	_LIMIT 30",
			"	k$ = INKEY\\$",
			"	SELECT CASE k",
			"		CASE CHR\\$(27)",
			"			EXIT DO",
			"		CASE CHR\\$(32)",
			"			do_output"
			"		CASE LCASE\\$(\"d\")",
			"			PRINT \"hello, world\"",
			"	END SELECT",
			"LOOP",
			"SCREEN 0",
			"_FREEIMAGE CANVAS",
			"SYSTEM",
			"",
			"",
			"",
			"SUB do_output",
			"	' put output here, update as needed",
			"END SUB"
		],
		"description": "Create a screen and input loop"
	}
}
